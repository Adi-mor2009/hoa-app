{"version":3,"sources":["logo.svg","asserts/three.jpg","asserts/login.jpg","asserts/messages.jpg","asserts/issue.jpg","asserts/vote.jpg","asserts/tenants.jpg","pages/HomePage/HomePage.js","model/UserModel.js","pages/LoginPage/LoginPage.js","asserts/signup.jpg","pages/SignupPage/SignupPage.js","components/MainNavbar/MainNavbar.js","pages/DashboardPage/DashboardPage.js","pages/IssuePage/IssuePage.js","pages/MessagePage/MessagePage.js","pages/VotingPage/VotingPage.js","pages/TenantsPage/TenantsPage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","props","Container","fluid","className","Carousel","Item","src","image1","alt","Caption","image2","image3","image4","image5","UserModel","parseUser","this","id","name","get","apartement","email","role","pwd","Parse","User","logIn","activeUser","logOut","current","LoginPage","onLogin","useState","setEmail","setPwd","showInvalidLogin","setShowInvalidLogin","loading","setLoading","to","e","a","preventDefault","login","console","error","Spinner","animation","variant","Row","Col","Alert","Form","onSubmit","Group","controlId","Label","InputGroup","Prepend","Text","class","Control","type","placeholder","value","onChange","target","Append","Button","block","SignupPage","showSignupError","setShowSignupError","setName","bname","setBname","address","setAddress","buildingObject","Object","extend","set","user","signUp","then","catch","MainNavbar","onLogout","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","style","color","onClick","DashboardPage","IssuePage","image","MessagePage","VotingPage","TenantsPage","App","setActiveUser","handleLogout","logout","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6fb2020.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/three.99d9f95a.jpg\";","export default __webpack_public_path__ + \"static/media/login.ffb2c68d.jpg\";","export default __webpack_public_path__ + \"static/media/messages.195273f4.jpg\";","export default __webpack_public_path__ + \"static/media/issue.e5ac902a.jpg\";","export default __webpack_public_path__ + \"static/media/vote.4ed8de48.jpg\";","export default __webpack_public_path__ + \"static/media/tenants.445c05c2.jpg\";","import React from 'react';\r\nimport { Carousel, Container } from 'react-bootstrap';\r\nimport './HomePage.css';\r\nimport image1 from '../../asserts/three.jpg';\r\nimport image2 from '../../asserts/login.jpg';\r\nimport image3 from '../../asserts/messages.jpg';\r\nimport image4 from '../../asserts/issue.jpg';\r\nimport image5 from '../../asserts/vote.jpg';\r\nimport image6 from '../../asserts/tenants.jpg';\r\n\r\nfunction HomePage(props) {\r\n    return (\r\n        <Container fluid className=\"p-home\">\r\n            {/* <div className=\"p-home-bg-img\">\r\n                <h1>HOA System</h1>\r\n                <h4>Homeowner Association Management System</h4> \r\n                <p>Managing your building!</p>\r\n            </div> */}\r\n            <div className=\"p-home-carousel\">\r\n                <Carousel>\r\n                    <Carousel.Item className=\"carousel-first-item\">\r\n                        <img\r\n                            // className=\"d-block w-100\"\r\n                            src={image1}\r\n                            alt=\"First slide\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3>HOA System</h3>\r\n                            <p>Homeowner Association Management System - All you need for managing your building</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item className=\"carousel-second-item\">\r\n                        <img\r\n                            // className=\"d-block w-100\"\r\n                            src={image2}\r\n                            alt=\"Second slide\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                            <h3>Manage tenants members</h3>\r\n                            <p>Add, remove and view tenants from the building account</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item className=\"carousel-third-item\">\r\n                        <img\r\n                            // className=\"d-block w-100\"\r\n                            src={image3}\r\n                            alt=\"Third slide\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                            <h3>Manage message system</h3>\r\n                            <p>Committe owner can post messages to tenants. Tenants can view, filter ...</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item className=\"carousel-forth-item\">\r\n                        <img\r\n                            // className=\"d-block w-100\"\r\n                            src={image4}\r\n                            alt=\"Third slide\"\r\n                        />\r\n\r\n                        <Carousel.Caption className=\"carousel-fifth-item\">\r\n                            <h3>Manage building issues</h3>\r\n                            <p>Tenants can report issues with priorty ...</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                            // className=\"d-block w-100\"\r\n                            src={image5}\r\n                            alt=\"Third slide\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                            <h3>Manage voting system</h3>\r\n                            <p>Committe owner can manage votes, tenats can participate and more</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import Parse from 'parse';\r\n\r\nexport default class UserModel {\r\n    //Example while using json\r\n    // #pwd;   // pwd is a private property\r\n    // constructor(plainUser) {\r\n    //     this.id = plainUser.id;\r\n    //     this.name = plainUser.name;\r\n    //     this.email = plainUser.email;\r\n    //     this.apartement = plainUser.apartement;\r\n    //     this.role = plainUser.role;\r\n    //     this.#pwd = plainUser.pwd;\r\n    // }\r\n\r\n    // login(email, pwd) {\r\n    //     return email.toLowerCase() === this.email.toLowerCase() && pwd === this.#pwd;\r\n    // }\r\n\r\n    #parseUser  // storing the parseUser object as a private field (might need to use it)\r\n    constructor(parseUser) {\r\n        this.id = parseUser.id;\r\n        this.name = parseUser.get(\"name\");\r\n        this.apartement = parseUser.get(\"apartement\");\r\n        this.email = parseUser.get(\"email\");\r\n        this.role = parseUser.get(\"role\");\r\n        this.#parseUser = parseUser;\r\n    }\r\n\r\n     // login is an async function that tries to login the user given the email and password.\r\n    // If successfull it will resolve the promise with a UserModel instance of the logged in user\r\n    // If unsuccessfull it will reject the promise with an appropriate error\r\n    static async login(email, pwd) {\r\n        const parseUser = await Parse.User.logIn(email, pwd);\r\n        const activeUser = new UserModel(parseUser);\r\n        return activeUser;\r\n    }\r\n\r\n    static logout() {\r\n        Parse.User.logOut();\r\n    }\r\n\r\n    static activeUser() {\r\n        return Parse.User.current();\r\n    }\r\n} \r\n\r\n","import React, { useState } from 'react';\r\nimport { Alert, Button, Col, Container, Form, FormControl, InputGroup, Row, Spinner } from 'react-bootstrap';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport UserModel from '../../model/UserModel';\r\nimport './LoginPage.css'\r\nimport image from '../../asserts/login.jpg';\r\nimport Parse from 'parse';\r\nimport { MDBBtn, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBRow } from \"mdbreact\";\r\n\r\nfunction LoginPage({ activeUser, onLogin }) {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n\r\n    async function login(e) {\r\n        e.preventDefault();\r\n\r\n        //This code for using json\r\n        // for (const user of users) {\r\n        //     if (user.login(email, pwd)) {\r\n        //         activeUser = user;\r\n        //         break;\r\n        //     }\r\n        // }\r\n\r\n        // if (activeUser) {\r\n        //     onLogin(activeUser);\r\n        // } else {\r\n        //     setShowInvalidLogin(true);\r\n        // }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const activeUser = await UserModel.login(email, pwd);\r\n            setLoading(false);\r\n            onLogin(activeUser);\r\n        } catch (error) {\r\n            console.error('Error while logging in user', error);\r\n            setShowInvalidLogin(true);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    //style={{backgroundImage: `url(${image}`, width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\r\n    return (\r\n        loading ? <div className=\"p-login-spinner d-flex justify-content-center align-items-center\"><Spinner animation=\"border\" variant=\"primary\" /></div> :\r\n            <Container fluid className=\"p-login\">\r\n                <div className=\"p-login-bg-img\">\r\n                    {/* <img  className=\"p-login-img\" src={image}></img> */}\r\n                    <Row>\r\n                        <Col>\r\n                            {/* <img  className=\"p-home-img\" src={image}></img> */}\r\n                            <div className=\"p-form-login\">\r\n                                <h1>Login to HOA</h1>\r\n                                <p>or <Link to=\"/signup\">create an account</Link></p>\r\n                                {showInvalidLogin ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n                                <Form onSubmit={login}>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Email address</Form.Label>\r\n                                        <InputGroup>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text id=\"basic-addon1\"><i class=\"bi bi-envelope-fill\"></i></InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control type=\"email\" placeholder=\"Enter email\"\r\n                                                value={email} onChange={e => setEmail(e.target.value)} />\r\n                                            <InputGroup.Append>\r\n                                                <InputGroup.Text id=\"basic-addon2\">@example.com</InputGroup.Text>\r\n                                            </InputGroup.Append>\r\n                                        </InputGroup>\r\n                                        <Form.Text className=\"text-muted\">\r\n                                            We'll never share your email with anyone else.\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formBasicPassword\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text id=\"basic-addon1\"><i class=\"bi bi-lock-fill\"></i></InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                            value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                                            <InputGroup.Append>\r\n                                                <InputGroup.Text id=\"basic-addon2\"><i class=\"bi bi-unlock-fill\"></i></InputGroup.Text>\r\n                                            </InputGroup.Append>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Button variant=\"success\" type=\"submit\" block>\r\n                                        Login\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","export default __webpack_public_path__ + \"static/media/signup.6b35fcaf.jpg\";","import React, { useState } from 'react';\r\nimport { Alert, Button, Container, Form, InputGroup } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport './SignupPage.css'\r\nimport Parse from 'parse';\r\nimport UserModel from '../../model/UserModel';\r\nimport image from '../../asserts/signup.jpg';\r\n \r\n\r\nfunction SignupPage({ activeUser, onLogin }) {\r\n\r\n    const [showSignupError, setShowSignupError] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [bname, setBname] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n\r\n    if (activeUser) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n\r\n    function signup(e) {\r\n        e.preventDefault();\r\n\r\n        // validation code is missing here...\r\n\r\n        const BuildingId = Parse.Object.extend('BuildingId');\r\n        const buildingObject = new BuildingId();\r\n\r\n        buildingObject.set('name', bname);\r\n        buildingObject.set('address', address);\r\n\r\n        // myNewObject.save().then(\r\n        //     (result) => {\r\n        //         console.log('BuildingId created', result);\r\n        //     },\r\n        //     (error) => {\r\n        //         console.error('Error while creating BuildingId: ', error);\r\n        //     }\r\n        // );\r\n\r\n\r\n        const user = new Parse.User()\r\n        user.set('username', email);\r\n        user.set('email', email);\r\n        //user.set('apartement', 1);\r\n        user.set('role', 0);\r\n        user.set('name', name);\r\n        user.set('buildingId', buildingObject);\r\n        user.set('password', pwd);\r\n\r\n        user.signUp().then((parseUser) => {\r\n            const activeUser = new UserModel(parseUser);\r\n            onLogin(activeUser);\r\n        }).catch(error => {\r\n            setShowSignupError(true);\r\n            console.error('Error while signing up user', error);\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"p-signup\">\r\n            <div className=\"p-signup-bg-img\">\r\n                {/* <img  className=\"p-home-img\" src={image}></img> */}\r\n                <div className=\"p-form-signup\">\r\n                    <h1>Welcome to HOA</h1>\r\n                    <p>Please fill the follwoing detais</p>\r\n                    {showSignupError ? <Alert variant=\"danger\">Error in Sign Up!</Alert> : null}\r\n                    <Form onSubmit={signup}>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"basic-addon1\"><i class=\"bi bi-envelope-fill\"></i></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\"\r\n                                    value={email} onChange={e => setEmail(e.target.value)} />\r\n                                <InputGroup.Append>\r\n                                    <InputGroup.Text id=\"basic-addon2\">@example.com</InputGroup.Text>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"basic-addon1\"><i class=\"bi bi-lock-fill\"></i></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\"\r\n                                    value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                                <InputGroup.Append>\r\n                                    <InputGroup.Text id=\"basic-addon2\"><i class=\"bi bi-unlock-fill\"></i></InputGroup.Text>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicname\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"basic-addon1\"><i class=\"bi bi-person-fill\"></i></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n\r\n                                <Form.Control type=\"text\" placeholder=\"Name\"\r\n                                    value={name} onChange={e => setName(e.target.value)} />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicLname\">\r\n                            <Form.Label>Building Name</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"basic-addon1\"><i class=\"bi bi-house-fill\"></i></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n\r\n                                <Form.Control type=\"text\" placeholder=\"Building Name\"\r\n                                    value={bname} onChange={e => setBname(e.target.value)} />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicAddress\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"basic-addon1\"><i class=\"bi bi-geo-alt-fill\"></i></InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n\r\n                                <Form.Control type=\"text\" placeholder=\"Full Address\"\r\n                                value={address} onChange={e => setAddress(e.target.value)} />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"success\" type=\"submit\" block>\r\n                            Signup\r\n                    </Button>\r\n                    </Form>\r\n                    {/* <div className=\"p-home-bg-img\">\r\n                        <img  className=\"p-home-img\" src={image}></img>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SignupPage;","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport './MainNavbar.css'\r\n\r\nfunction MainNavbar({activeUser, onLogout}) {\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\" className=\"c-navbar\">\r\n            <Navbar.Brand href=\"#/\"><i className=\"bi bi-house-fill\"></i> HOA</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    {activeUser ? <Nav.Link href=\"#/dashboard\">Dashboard</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#/tenants\">Tenants</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#/messages\">Messages</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#/issue\">Issues</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#/vote\">Vote</Nav.Link> : null}\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n                    {!activeUser ? <Nav.Link href=\"#/login\"><span style={{color: \"blue\"}}>Login</span></Nav.Link> : null}\r\n                    {!activeUser ? <Nav.Link href=\"#/signup\">Signup</Nav.Link> : null}\r\n                    {activeUser ? <Nav.Link href=\"#\" onClick={() => onLogout()}>Logout</Nav.Link> : null}\r\n                </Nav>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default MainNavbar;\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport './DashboardPage.css'\r\n\r\nexport default function DashboardPage({ activeUser }) {\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-dashboard\">\r\n            <h1>{activeUser.name}'s dashboard</h1>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './IssuePage.css'\r\nimport image from '../../asserts/issue.jpg';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction IssuePage({activeUser}) {\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-issue\">\r\n            <img  className=\"p-issue-img\" src={image}></img>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default IssuePage; ","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './MessagePage.css'\r\nimport image from '../../asserts/messages.jpg';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction MessagePage({activeUser}) {\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-message\">\r\n            <img  className=\"p-message-img\" src={image}></img>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MessagePage; ","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './VotingPage.css'\r\nimport image from '../../asserts/vote.jpg';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction VotingPage({activeUser}) {\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-voting\">\r\n            <img  className=\"p-voting-img\" src={image}></img>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default VotingPage; ","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './TenantsPage.css'\r\nimport image from '../../asserts/tenants.jpg';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction TenantsPage({activeUser}) {\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-tenants\">\r\n            <img  className=\"p-tenants-img\" src={image}></img>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TenantsPage; ","import logo from './logo.svg';\nimport './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport MainNavbar from './components/MainNavbar/MainNavbar';\nimport { useState } from 'react';\nimport DashboardPage from './pages/DashboardPage/DashboardPage';\nimport usersJSON from './data/users.json'\nimport UserModel from './model/UserModel';\nimport Parse from 'parse';\nimport IssuePage from './pages/IssuePage/IssuePage';\nimport MessagePage from './pages/MessagePage/MessagePage';\nimport VotingPage from './pages/VotingPage/VotingPage';\nimport TenantsPage from './pages/TenantsPage/TenantsPage';\n\nfunction App() {\n  //manually\n  // const [activeUser, setActiveUser] = useState(null);\n  //const [activeUser, setActiveUser] = useState({id:\"1\", name:\"Adi Mor\", email:\"adi@adi.com\", apartement:\"1\", role:\"admin\"});\n  //how to use json file\n  // const [users, setUsers] = useState(usersJSON.map(plainUser => new UserModel(plainUser)));\n  // const [activeUser, setActiveUser] = useState(users[0]);\n  //Parse save active user in local storage, afrer refresh the user still logged in\n  const [activeUser, setActiveUser] = useState(UserModel.activeUser() ? new UserModel(UserModel.activeUser()) : null);\n\n  //Inorder to clean local storage we need to do parse logout\n  function handleLogout() {\n    setActiveUser(null);\n    UserModel.logout();\n  }\n\n  return (\n    <div className=\"app\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" >\n            <MainNavbar  activeUser={activeUser}  onLogout={() => setActiveUser(null)}/>\n            <HomePage/>\n          </Route>\n          {/* Using json <Route exact path=\"/login\"><LoginPage activeUser={activeUser} users={users} onLogin={user => setActiveUser(user)}/></Route> */}\n          <Route exact path=\"/login\">\n            <MainNavbar activeUser={activeUser}  onLogout={handleLogout}/>\n            <LoginPage activeUser={activeUser} onLogin={user => setActiveUser(user)}/>\n            </Route>\n          <Route exact path=\"/signup\" >\n            <MainNavbar activeUser={activeUser}  onLogout={handleLogout}/>\n            <SignupPage activeUser={activeUser} onLogin={user => setActiveUser(user)}/>\n          </Route>\n          <Route exact path=\"/dashboard\" >\n            <MainNavbar activeUser={activeUser}  onLogout={handleLogout}/>\n            <DashboardPage activeUser={activeUser}/>\n          </Route>\n          <Route exact path=\"/tenants\" >\n            <MainNavbar activeUser={activeUser}  onLogout={handleLogout}/>\n            <TenantsPage activeUser={activeUser}/>\n          </Route>\n          <Route exact path=\"/messages\" >\n            <MainNavbar activeUser={activeUser}  onLogout={handleLogout}/>\n            <MessagePage activeUser={activeUser}/>\n          </Route>\n          <Route exact path=\"/issue\" >\n            <MainNavbar activeUser={activeUser}  onLogout={handleLogout}/>\n            <IssuePage activeUser={activeUser}/>\n          </Route>\n          <Route exact path=\"/vote\" >\n            <MainNavbar activeUser={activeUser}  onLogout={handleLogout}/>\n            <VotingPage activeUser={activeUser}/>\n          </Route>\n          {/* <Route exact path=\"/tenants\" ><TenantsPage/></Route>\n          <Route exact path=\"/messages\" ><MessagesdPage/></Route>\n          <Route exact path=\"/new-message\" ><NewMessagePage/></Route>\n          <Route exact path=\"/votings\" ><Votings/></Route>\n          <Route exact path=\"/new-voting\" ><NewVoting/></Route> */}\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css'\nimport Parse from 'parse';\n\n\nParse.serverURL = 'https://parseapi.back4app.com'; // This is your Server URL\nParse.initialize(\n  'LOtcNuMAaCowXWDHBSkbZsVnulEmY4n19auKqY1E', // This is your Application ID\n  'UN4wJVPlWCIgO5Hpb7zcX95cUSQTN8P8xlXDmXNu' // This is your Javascript key\n);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}